#! /bin/bash
#
# pf_ring          Load the pfring driver
#
# chkconfig: 2345 30 60
#
# (C) 2003-13 - ntop.org
#
### BEGIN INIT INFO
# Provides:          pf_ring
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $n2disk $nprobe
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start/stop pf_ring
### END INIT INFO

if [ -f /lib/lsb/init-functions ]; then
   DISTRO="debian"
   . /lib/lsb/init-functions
fi
if [ -f /etc/init.d/functions ]; then
   DISTRO="centos"
   . /etc/init.d/functions
fi

MGMT_INTERFACE="eth0"
MGMT_INTERFACE_DRIVER="$(/sbin/ethtool -i $MGMT_INTERFACE | grep driver | cut -d ' ' -f 2)"
PFRING="pf_ring"
DNA_DRIVERS_DIR="/usr/local/pfring/drivers/DNA"
ERROR=0

check_pf_ring() {
   # check the module status
   RETVAL=0
   if [ $1 == "start" ] && [ `lsmod | grep ${PFRING} | wc -l ` -gt 0 ]; then
       MSG="PF_RING already loaded. Exiting"
       ERROR=1
       RETVAL=1
   elif [ $1 == "stop" ] && [ `lsmod | grep ${PFRING} | wc -l ` -le 0 ]; then
       MSG="PF_RING already unloaded Exiting"
       ERROR=0 
       RETVAL=0
       [ ${DISTRO} == "debian" ] && log_end_msg $ERROR
       [ ${DISTRO} == "centos" ] && echo_success && echo
       exit 0
   fi

   if [ ${ERROR} -gt 0 ]; then
      if [ ${DISTRO} == "debian" ]; then
         log_failure_msg "${MSG}"
         log_end_msg $ERROR
         exit 99
      elif [ ${DISTRO} == "centos" ]; then
         echo -n ${MSG} 
         echo_failure; echo
         exit 99
      fi
   fi
}


start_pf_ring() {
    # Set CPU freq to performance useful in particular
    # on CPUs with aggressive scaling such as Intel E5

    [ ${DISTRO} == "debian" ] && log_daemon_msg "Starting PF_RING module"
    [ ${DISTRO} == "centos" ] && echo -n "Starting PF_RING module: "

    find /sys/devices/system/cpu/ -name scaling_governor -exec sh -c 'echo performance > {}' \;

    KERNEL_VERSION=$(uname -r)

    PFRING_CONFIG="/etc/pf_ring/pfring.conf"
    PARAM=""
    if [ -f $PFRING_CONFIG ]; then
        PARAM="$(cat $PFRING_CONFIG)"
    fi

    PF_RING_MOD="/lib/modules/$KERNEL_VERSION/kernel/net/pf_ring/pf_ring.ko"
    PF_RING_MOD_LOCAL="/usr/local/pfring/kernel/pf_ring.ko"

    check_pf_ring start

    if [ -f $PF_RING_MOD ]; then
        /sbin/insmod $PF_RING_MOD $PARAM
    elif [ -f $PF_RING_MOD_LOCAL ]; then
        /sbin/insmod $PF_RING_MOD_LOCAL $PARAM
    else
	if [ ! `/sbin/modinfo pf_ring|wc -l` -gt 1 ]; then
	   # try building dkms
	   /usr/sbin/dkms autoinstall
	fi
	/sbin/modprobe pf_ring $PARAM
    fi
   
    if [ `lsmod | grep ${PFRING} | wc -l ` -le 0 ] ; then
       MSG="Unable to load PF_RING. Exiting"
       ERROR=1
       RETVAL=1
       if [ ${DISTRO} == "debian" ]; then
           log_failure_msg "${MSG}"
           log_end_msg $ERROR
           exit 99
       elif [ ${DISTRO} == "centos" ]; then
           echo -n ${MSG} 
           echo_failure; echo
           exit 99
      fi
    fi

    if [ -d $DNA_DRIVERS_DIR ]; then
        DNA_DRIVERS="$(/bin/ls $DNA_DRIVERS_DIR|cut -d '.' -f 1)"
        for D in $DNA_DRIVERS ; do
	    DRIVER_CONFIG="/etc/pf_ring/dna-$D.conf"
	    if [ -f $DRIVER_CONFIG ]; then
	        ADAPTERS_LISTED="$(grep adapters_to_enable $DRIVER_CONFIG|wc -l)"
	        if [ "$D" == "$MGMT_INTERFACE_DRIVER" ] && [ $ADAPTERS_LISTED -eq 0 ]; then
		    echo "Unable to replace $D as it is used by the management interface"
	        else
		    PARAM="$(cat $DRIVER_CONFIG)"
 	            # Remove the driver first as the original vanilla driver might be the one we want to overwrite	    
		    NUM="$(grep $D /proc/modules|wc -l)"
		    if [ $NUM -gt 0 ]; then
		        /sbin/rmmod $D
		    fi
		    if [ -f $DNA_DRIVERS_DIR/$D.ko ]; then
		        /sbin/insmod $DNA_DRIVERS_DIR/$D.ko $PARAM
		    else
		  	# trying with dkms
			/sbin/modprobe $D-dna $PARAM
		    fi
	        fi
	    fi
        done
    else
	# dkms
	DNA_DKMS_DRIVERS=('e1000e' 'igb' 'ixgbe')
	INSTALLED_DNA_DRIVER=0
	for D in ${DNA_DKMS_DRIVERS[@]} ; do
	    DRIVER_CONFIG="/etc/pf_ring/dna-$D.conf"
	    if [ `dpkg -l |grep ${D}-dna-dkms |wc -l` -gt 0 ]; then
	        if [ -f $DRIVER_CONFIG ]; then
                    ADAPTERS_LISTED="$(grep adapters_to_enable $DRIVER_CONFIG|wc -l)"
                    if [ "$D" == "$MGMT_INTERFACE_DRIVER" ] && [ $ADAPTERS_LISTED -eq 0 ]; then
                        echo "Unable to replace $D as it is used by the management interface"
                    else
                        PARAM="$(cat $DRIVER_CONFIG)"
                        # Remove the driver first as the original vanilla driver might be the one we want to overwrite          
                        NUM="$(grep $D /proc/modules|wc -l)"
                        if [ $NUM -gt 0 ]; then
                            /sbin/modprobe -r $D
                            /sbin/modprobe -r $D-dna
                        fi
                        # trying with dkms
                        /sbin/modprobe $D-dna $PARAM
			INSTALLED_DNA_DRIVER=1
                    fi
		fi	
	    fi	
	done
	if [ $INSTALLED_DNA_DRIVER -eq 0 ]; then
           echo "DNA drivers not found or installed"
	fi
    fi

    sleep 1

    # /sbin/ifup -a
    
    # Enable all interfaces DNA and non DNA
    INTERFACES="$(cat /proc/net/dev | grep ':' | cut -d ':' -f 1|grep -v 'lo' | tr -d '\n' | sed 's/^  //'| sed 's/  / /')"
    for D in $INTERFACES ; do
        /sbin/ifconfig $D up
        if [ "$D" != "$MGMT_INTERFACE" ]; then
            /sbin/ethtool -K $D sg off tso off gso off gro off
        fi
    done
    [ ${DISTRO} == "debian" ] && log_end_msg $ERROR
    [ ${DISTRO} == "centos" ] && echo_success && echo
}


stop_pf_ring() {

    RETVAL=0
    [ ${DISTRO} == "debian" ] && log_daemon_msg "Stopping PF_RING module"
    [ ${DISTRO} == "centos" ] && echo -n "Stopping PF_RING module: "

    check_pf_ring stop

    if [ -f /etc/init.d/nprobe ]; then
	/etc/init.d/nprobe stop
	sleep 2
    fi

    if [ -f /etc/init.d/n2disk ]; then
	/etc/init.d/n2disk stop
	sleep 2
    fi

    if [ -f /etc/init.d/ntop ]; then
	/etc/init.d/ntop stop
	sleep 2
    fi

    if [ -f /etc/init.d/ntopng ]; then
	/etc/init.d/ntopng stop
	sleep 2
    fi

    if [ -d $DNA_DRIVERS_DIR ]; then
        DNA_DRIVERS="$(/bin/ls /usr/local/pfring/drivers/DNA/|cut -d '.' -f 1)"
        for D in $DNA_DRIVERS ; do
            DRIVER_CONFIG="/etc/pf_ring/dna-$D.conf"
            if [ -f $DRIVER_CONFIG ]; then
	        NUM="$(grep $D /proc/modules |wc -l)"
	        if [ $NUM -gt 0 ]; then
	            ADAPTERS_LISTED="$(grep adapters_to_enable $DRIVER_CONFIG|wc -l)"
	            if [ "$D" == "$MGMT_INTERFACE_DRIVER" ] && [ $ADAPTERS_LISTED -eq 0 ]; then
		        echo "Unable to replace $D as it is used by the management interface"
		    else
		        if [ -f $DNA_DRIVERS_DIR/$D.ko ]; then
		            /sbin/rmmod $D
		        else
		      	    # trying with dkms
		    	    /sbin/rmmod $D-dna
		        fi
		    fi
	        fi
	    fi
        done
    else
	# dkms
	DNA_DKMS_DRIVERS=('e1000e' 'igb' 'ixgbe')
	INSTALLED_DNA_DRIVER=0
	for D in ${DNA_DKMS_DRIVERS[@]} ; do
	    DRIVER_CONFIG="/etc/pf_ring/dna-$D.conf"
	    if [ `dpkg -l |grep ${D}-dna-dkms |wc -l` -gt 0 ]; then
	        if [ -f $DRIVER_CONFIG ]; then
	            ADAPTERS_LISTED="$(grep adapters_to_enable $DRIVER_CONFIG|wc -l)"
	            if [ "$D" == "$MGMT_INTERFACE_DRIVER" ] && [ $ADAPTERS_LISTED -eq 0 ]; then
		        echo "Unable to replace $D as it is used by the management interface"
		    else
		        /sbin/rmmod $D-dna
		    fi
                fi	
	    fi	
	done
    fi

    NUM="$(grep pf_ring /proc/modules|wc -l)"
    if [ $NUM -gt 0 ]; then
	/sbin/rmmod pf_ring
        NUM="$(grep pf_ring /proc/modules|wc -l)"
	if [ ${NUM} -gt 0 ]; then
	   MSG="unable to unload PF_RING module"
           [ ${DISTRO} == "debian" ] && log_failure_msg "$MSG"
           [ ${DISTRO} == "centos" ] && echo_failure
           ERROR=1
	fi
    fi
    [ ${DISTRO} == "debian" ] && log_end_msg $ERROR
    [ ${DISTRO} == "centos" ] && echo_success && echo
}

########

INTERFACE_NAME=$2

case "$1" in
  start)
	start_pf_ring;
	;;

  stop)
       	stop_pf_ring;
	;;

  restart)
        stop_pf_ring;
	start_pf_ring;
	;;

  *)
	echo "Usage: /etc/init.d/pf_ring {start|stop|restart}"
	exit 1
esac

exit 0

